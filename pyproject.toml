[build-system]
requires = ["scikit-build-core", "torch"]
build-backend = "scikit_build_core.build"

[project]
name = "tiberate"
version = "0.9.11"
description = "T(yped-l)iberate-fhe: a variant of Liberate-fhe with better typing"
authors = [
    { name = "Juwhan Kim", email = "juwhan.kim@desilo.ai" },
    { name = "Hanyul Ryu", email = "hanyul.ryu@desilo.ai" },
    { name = "Gavin Gong", email = "gavin@gong.host" },
    { name = "PuQing", email = "me@puqing.work" },
]
requires-python = ">=3.10"
maintainers = [
    { name = "Gavin Gong", email = "gavin@gong.host>" },
    { name = "PuQing", email = "me@puqing.work" },
]
readme = "README.md"
license = "BSD-3-Clause-Clear"
keywords = [
    "python",
    "cryptoghraphy",
    "privacy",
    "encryption",
    "cuda",
    "homomorphic encryption",
    "homomorphic encryption library",
    "fhe",
]
classifiers = [
    "Environment :: GPU :: NVIDIA CUDA",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "click>=8.1.8",
    "joblib>=1.4.2",
    "loguru>=0.7.3",
    "matplotlib>=3.10.1",
    "mpmath>=1.3.0",
    "numpy>=2.2.5",
    "nvtx>=0.2.11",
    "plotext>=5.3.2",
    "rich>=14.0.0",
    "scikit-build-core>=0.11.1",
    "scipy>=1.15.2",
    "textual[syntax]>=3.1.1",
    "torch>=2.6.0",
    "vdtoys>=0.1.4",
]
[project.urls]
Repository = "https://github.com/VisualDust/tiberate-fhe"

[tool.scikit-build]
build-dir = "build"
cmake.args = ["-DCMAKE_EXPORT_COMPILE_COMMANDS=ON"]
cmake.verbose = true
wheel.install-dir = "tiberate"
wheel.packages = ["tiberate"]

[project.scripts]
tiberate = "tiberate._cli:main"

[tool.black]
line-length = 80
skip-string-normalization = true
target-version = ["py310", "py311", "py312"]
extend-exclude = '''
(
    | build/.+          # Exclude build directory
)
'''

[tool.ruff]
exclude = ["./build"]
line-length = 80
target-version = "py310"

[tool.ruff.format]
# Prevent change to double quotes by some users use ruff format
quote-style = "preserve"

[tool.ruff.lint]
select = [
    # Pycodestyle
    "E",
    "W",

    # Pyflakes
    "F",

    # Isort
    "I",

    # Comprehensions
    "C4",

    # Debugger
    "T100",

    # Pyupgrade
    "UP",

    # Flake8-pyi
    "PYI",

    # NumPy-specific rules
    "NPY001",
    "NPY003",
    "NPY201",

    # Bugbear
    "B002",
    "B003",
    "B004",
    "B009",
    "B010",
    "B011",
    "B012",
    "B013",
    "B014",
    "B015",
    "B016",
    "B017",
    "B018",
    "B019",
    "B020",
    "B021",
    "B022",
    "B025",
    "B029",
    "B032",

    # Pylint
    "PLE",
    "PLC3002",
    "PLR0206",
    "PLR0402",
    "PLR1711",
    "PLR1722",
    "PLW3301",

    # Flake8-simplify
    "SIM101",

    # Pygrep-hooks
    "PGH004",

    # Flake8-type-checking
    "TC",

    # Ruff-specific rules
    "RUF005",
    "RUF008",
    "RUF009",
    "RUF010",
    "RUF013",
    "RUF015",
    "RUF016",
    "RUF017",
    "RUF018",
    "RUF019",
    "RUF020",
    "RUF024",
    "RUF026",
    "RUF100",

    # Flake8-raise
    "RSE",

    # Flake8-quotes
    "Q003",
    "Q004",

    # Refurb
    "FURB",

    # Flake8-future-annotations
    "FA",
]
unfixable = ["NPY001"]
ignore = [
    # Whitespace before ‘,’, ‘;’, or ‘:’, it is not compatible with black
    "E203",
    # Module level import not at top of file
    "E402",
    # Line too long (82 > 79 characters)
    "E501",
    # Do not compare types, use `isinstance()`
    "E721",
    # Do not use bare except, specify exception instead
    "E722",
    # Do not assign a lambda expression, use a def
    "E731",
    # Do not use variables named ‘l’, ‘O’, or ‘I’
    "E741",
    # `name` may be undefined, or defined from star imports: `module`
    "F405",
    # Local variable name is assigned to but never used
    "F841",
    # It not met the "Explicit is better than implicit" rule
    "UP015",
    # It will cause the performance regression on python3.10
    "UP038",
    # collections.namedtuple can be quickly created a inlined class
    "PYI024",
    # `__all__.append` is a common pattern in Paddle
    "PYI056",
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["tiberate"]

[tool.mypy]
python_version = "3.10"
cache_dir = ".mypy_cache"
# Miscellaneous strictness flags
allow_redefinition = true
local_partial_types = true
strict = false
# Untyped definitions and calls
check_untyped_defs = true
# Import discovery
follow_imports = "normal"
# Miscellaneous
warn_unused_configs = true
# Disallow generic without type arguments
disallow_any_generics = true
# Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
# Configuring error messages
show_column_numbers = true

[dependency-groups]
dev = [
    "pydot>=3.0.4",
    "pytest>=8.3.5",
    "tabulate>=0.9.0",
    "ubelt>=1.3.7",
]
